"use strict";var stage={w:1280,h:720},_pexcanvas=document.getElementById("canvas");_pexcanvas.width=stage.w,_pexcanvas.height=stage.h;var ctx=_pexcanvas.getContext("2d"),pointer={x:stage.w/2,y:stage.h/4},scale=1,portrait=!0,loffset=0,toffset=0,mxpos=0,mypos=0,againprog=0,healthprog=0;function newGame(){score=0,health=100,(enemies=[]).push(new Enemy),enemies.push(new Enemy),enemies.push(new Enemy),againprog=0}function drawHeart(x,y,w){ctx.beginPath(),ctx.arc(x-w/4,y,w/4,.75*Math.PI,0),ctx.arc(x+w/4,y,w/4,1*Math.PI,2.25*Math.PI),ctx.lineTo(x,y+w/1.5),ctx.closePath(),ctx.fill()}var Cannon=function(x,y,tx,ty){this.x=x,this.y=y,this.tx=tx,this.ty=ty,this.r=10},cannons=[],gameover=!1;cannons.push(new Cannon(stage.w,stage.h,stage.w/2,stage.h/2));var firetm=0,fireact=!0,health=100,score=0,arm={x:stage.w,y:stage.h},arm2={x:0,y:stage.h},danger=!1,dangera=0,Enemy=function(){this.x=stage.w/2,this.y=stage.h/2,this.r=10,this.tx=Math.floor(Math.random()*stage.w),this.ty=Math.floor(Math.random()*stage.h),this.des=!1,this.eyeX=.4,this.eyeY=.25,this.eyeR=.25,this.sp=50,this.spl=1.4,this.op=1,this.danger=!1,this.nuked=!1},enemies=[];enemies.push(new Enemy),enemies.push(new Enemy),enemies.push(new Enemy);for(var entm=0,ga=0,steptime=0,Star=function(){this.a=Math.random()*Math.PI*2,this.v=3+5*Math.random(),this.x=stage.w/2,this.y=stage.h/2,this.r=.2},Power=function(){this.type=Math.floor(2*Math.random())+1,this.a=Math.random()*Math.PI*2,this.v=3+5*Math.random(),this.x=stage.w/2,this.y=stage.h/2,this.r=.2,this.dis=!1,this.op=1},powers=[],powertm=0,powermax=800*Math.random()+300,stars=[],i=0;i<200;i++){stars[i]=new Star;var st=stars[i],move=400*Math.random();st.x+=Math.sin(st.a)*move,st.y+=Math.cos(st.a)*move}function enginestep(){steptime=Date.now(),ctx.clearRect(0,0,stage.w,stage.h),ctx.fillStyle="#ffffff";for(var i=0;i<stars.length;i++){var st;(st=stars[i]).x+=Math.sin(st.a)*st.v,st.y+=Math.cos(st.a)*st.v,st.r+=st.v/200,ctx.beginPath(),ctx.arc(st.x,st.y,st.r,2*Math.PI,0),ctx.fill(),(st.x>stage.w||st.x<0||st.y<0||st.y>stage.h)&&(stars[i]=new Star)}if(gameover)ctx.fillStyle="rgba(170,255,255,0.3)",ctx.fillRect((stage.w-220)/2,.65*stage.h-25,againprog,50),ctx.fillStyle="#aa0061",ctx.font="bold 130px arial",ctx.textAlign="center",ctx.textBaseline="middle",ctx.fillText("GAME OVER",stage.w/2,stage.h/3),ctx.font="bold 50px arial",ctx.fillText("SCORE: "+score,stage.w/2,stage.h/2),ctx.font="bold 30px arial",ctx.fillText("PLAY AGAIN",stage.w/2,.65*stage.h),againprog+=(0-againprog)/50;else{danger=!1,++powertm>powermax&&(powers.push(new Power),powertm=0,powermax=1200*Math.random()+600);for(var i=0;i<powers.length;i++){var st;if((st=powers[i]).des?(st.r*=1.1,1==st.type?st.op+=(0-st.op)/10:st.op+=(0-st.op)/20,st.x+=(stage.w/2-st.x)/10,st.y+=(stage.h/2-st.y)/10):(st.x+=Math.sin(st.a)*st.v/1.5,st.y+=Math.cos(st.a)*st.v/1.5,st.r+=st.v/15),1==st.type?(ctx.fillStyle="rgba(255,0,0,"+st.op+")",drawHeart(st.x,st.y-st.r/4,2*st.r)):(ctx.fillStyle="rgba(255,255,0,"+st.op+")",ctx.strokeStyle="rgba(255,255,0,"+st.op+")",ctx.lineWidth=st.r/10,ctx.beginPath(),ctx.arc(st.x,st.y,st.r,2*Math.PI,0),ctx.stroke(),ctx.beginPath(),ctx.arc(st.x,st.y,.15*st.r,2*Math.PI,0),ctx.fill(),ctx.beginPath(),ctx.arc(st.x,st.y,.85*st.r,1.67*Math.PI,2*Math.PI),ctx.arc(st.x,st.y,.25*st.r,2*Math.PI,1.67*Math.PI,!0),ctx.closePath(),ctx.fill(),ctx.beginPath(),ctx.arc(st.x,st.y,.85*st.r,3*Math.PI,3.33*Math.PI),ctx.arc(st.x,st.y,.25*st.r,3.33*Math.PI,3*Math.PI,!0),ctx.closePath(),ctx.fill(),ctx.beginPath(),ctx.arc(st.x,st.y,.85*st.r,2.33*Math.PI,2.67*Math.PI),ctx.arc(st.x,st.y,.25*st.r,2.67*Math.PI,2.33*Math.PI,!0),ctx.lineTo(st.x,st.y),ctx.closePath(),ctx.fill()),st.x>stage.w||st.x<0||st.y<0||st.y>stage.h||st.r>stage.w/2){if(powers.splice(i,1),2==st.type&&st.r>stage.w/2)for(var e=0;e<enemies.length;e++)enemies[e].des=!0,enemies[e].nuked=!0;i--}}entm++,enemies.length<10&&entm>300&&(entm=0,enemies.push(new Enemy)),ctx.lineWidth=2;for(var i=0;i<enemies.length;i++){var en;if((en=enemies[i]).danger?(health-=.01,ctx.strokeStyle="rgba(255,0,0,"+2*en.op+")",danger=!0):ctx.strokeStyle="rgba(0,255,255,"+2*en.op+")",en.des)en.eyeR+=(.5-en.eyeR)/5,en.op+=(0-en.op)/5,en.r+=(100-en.r)/20,en.spl+=(2.5-en.spl)/5,ctx.beginPath(),ctx.arc(en.x-en.r*en.eyeX,en.y-en.r*en.eyeY,en.r*en.eyeR,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(en.x+en.r*en.eyeX,en.y-en.r*en.eyeY,en.r*en.eyeR,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(en.x,en.y+en.r/2,en.r*en.eyeR,Math.PI,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(en.x,en.y,en.r,0,2*Math.PI),ctx.stroke();else{if(en.danger){var randx=Math.floor(4*Math.random())-2,randy=Math.floor(4*Math.random())-2;en.x=en.tx+randx,en.y=en.ty+randy}else{en.x+=(en.tx-en.x)/100,en.y+=(en.ty-en.y)/100;var randx=0,randy=0}en.r+=(50-en.r)/100,Math.abs(50-en.r)<2&&!en.danger&&(en.tx=en.x,en.ty=en.y,en.danger=!0),ctx.beginPath(),ctx.arc(en.x-en.r*en.eyeX,en.y-en.r*en.eyeY,en.r*en.eyeR,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(en.x+en.r*en.eyeX,en.y-en.r*en.eyeY,en.r*en.eyeR,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(en.x,en.y+en.r/4,en.r/3,2*Math.PI,Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(en.x,en.y,en.r,0,2*Math.PI),ctx.stroke()}for(var s=0;s<12;s++){var a=2*Math.PI/12*s+ga;ctx.beginPath(),ctx.moveTo(en.x+Math.sin(a)*en.r,en.y+Math.cos(a)*en.r),ctx.lineTo(en.x+Math.sin(a)*en.r*1.2,en.y+Math.cos(a)*en.r*1.2),ctx.lineTo(en.x+Math.sin(a+Math.PI/en.sp)*en.r*en.spl,en.y+Math.cos(a+Math.PI/en.sp)*en.r*en.spl),ctx.lineTo(en.x+Math.sin(a-Math.PI/en.sp)*en.r*en.spl,en.y+Math.cos(a-Math.PI/en.sp)*en.r*en.spl),ctx.lineTo(en.x+Math.sin(a)*en.r*1.2,en.y+Math.cos(a)*en.r*1.2),ctx.stroke()}if(Math.abs(.5-en.eyeR)<.01){var rand=Math.floor(2*Math.random());enemies[i].nuked&&1==rand?enemies.splice(i,1):enemies[i]=new Enemy}}danger?((dangera+=.05+(100-health)/1e3)>=Math.PI&&(dangera=0),ctx.fillStyle="rgba(255,0,0,"+(1-Math.sin(dangera))/4+")",ctx.fillRect(0,0,stage.w,stage.h),health<10&&(ctx.fillStyle="rgba(255,255,0,"+Math.sin(dangera)+")",ctx.strokeStyle="rgba(255,255,0,"+Math.sin(dangera)+")",ctx.lineWidth=10,ctx.beginPath(),ctx.lineJoin="round",ctx.moveTo(stage.w/2,stage.h/4),ctx.lineTo(stage.w/2+stage.h/7,stage.h/2),ctx.lineTo(stage.w/2-stage.h/7,stage.h/2),ctx.closePath(),ctx.stroke(),ctx.font="bold 130px arial",ctx.textAlign="center",ctx.textBaseline="middle",ctx.fillText("!",stage.w/2,stage.h/2.5),ctx.font="bold 50px arial",ctx.fillText("LOW HEALTH",stage.w/2,.6*stage.h))):dangera=0,healthprog+=(health-healthprog)/5,ctx.fillStyle="#00ffff",ctx.font="30px arial",ctx.textAlign="left",ctx.textBaseline="middle",ctx.fillText("Health: ",0,40),ctx.fillText("Score: "+score,stage.w-200,40),ctx.fillStyle=health>30?"rgba(0,255,255,0.8)":"rgba(255,0,0,0.8)",ctx.lineWidth=2,ctx.fillRect(100,25,3*healthprog,30),ctx.strokeStyle="#00ffff",ctx.strokeRect(100,25,300,30),health<0&&(gameover=!0)}ctx.strokeStyle="#00ffff",ctx.fillStyle="#00ffff",ctx.lineWidth=2,fireact?(++firetm>5&&(cannons.push(new Cannon(pointer.x+(stage.w-pointer.x)/2.5,pointer.y+(stage.h-pointer.y)/2.5,pointer.x,pointer.y)),cannons.push(new Cannon(pointer.x-pointer.x/2.5,pointer.y+(stage.h-pointer.y)/2.5,pointer.x,pointer.y)),firetm=0),arm.x=Math.floor(50*Math.random())-25+stage.w,arm.y=Math.floor(50*Math.random())-25+stage.h,arm2.x=Math.floor(30*Math.random())-15,arm2.y=Math.floor(30*Math.random())-15+stage.h):(arm.x=stage.w,arm.y=stage.h,arm2.x=0,arm2.y=stage.h);for(var i=0;i<cannons.length;i++){var can=cannons[i];if(can.x+=(can.tx-can.x)/5,can.y+=(can.ty-can.y)/5,can.r+=(0-can.r)/5,ctx.beginPath(),ctx.arc(can.x,can.y,can.r,0,2*Math.PI),ctx.fill(),can.r<2&&!gameover)for(var a=0;a<enemies.length;a++){var en=enemies[a],dx,dy,dis;(dis=(dx=can.x-en.x)*dx+(dy=can.y-en.y)*dy)<en.r*en.r&&(enemies[a].des||(enemies[a].des=!0,score+=10))}if(can.r<1&&!gameover)for(var a=0;a<powers.length;a++){var en=powers[a],dx,dy,dis;(dis=(dx=can.x-en.x)*dx+(dy=can.y-en.y)*dy)<en.r*en.r&&(en.des||(powers[a].des=!0,1==en.type&&(health=100)))}can.r<1&&gameover&&can.x>(stage.w-220)/2&&can.y>.65*stage.h-25&&can.x<(stage.w-220)/2+220&&can.y<.65*stage.h-25+50&&(againprog+=1)>220&&(newGame(),gameover=!1),Math.abs(can.tx-can.x)<1&&cannons.splice(i,1)}ctx.beginPath(),ctx.moveTo(pointer.x-20,pointer.y),ctx.lineTo(pointer.x+20,pointer.y),ctx.stroke(),ctx.beginPath(),ctx.moveTo(pointer.x,pointer.y-20),ctx.lineTo(pointer.x,pointer.y+20),ctx.stroke(),ctx.beginPath(),ctx.arc(pointer.x,pointer.y,8,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.moveTo(pointer.x+(arm.x-pointer.x)/3,pointer.y+(arm.y-pointer.y)/3+10),ctx.lineTo(pointer.x+(arm.x-pointer.x)/2.5,pointer.y+(arm.y-pointer.y)/2.5+10),ctx.lineTo(pointer.x+(arm.x-pointer.x)/2,pointer.y+(arm.y-pointer.y)/2+10),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.5,pointer.y+(arm.y-pointer.y)/1.5+50),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.2,pointer.y+(arm.y-pointer.y)/1.2+80),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.1,pointer.y+(arm.y-pointer.y)/1.1+100),ctx.stroke(),ctx.beginPath(),ctx.moveTo(pointer.x+(arm.x-pointer.x)/3-10,pointer.y+(arm.y-pointer.y)/3),ctx.lineTo(pointer.x+(arm.x-pointer.x)/2.5-10,pointer.y+(arm.y-pointer.y)/2.5),ctx.lineTo(pointer.x+(arm.x-pointer.x)/2-10,pointer.y+(arm.y-pointer.y)/2),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.5-50,pointer.y+(arm.y-pointer.y)/1.5),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.2-80,pointer.y+(arm.y-pointer.y)/1.2),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.1-100,pointer.y+(arm.y-pointer.y)/1.1),ctx.stroke(),ctx.beginPath(),ctx.moveTo(pointer.x+(arm.x-pointer.x)/3,pointer.y+(arm.y-pointer.y)/3-10),ctx.lineTo(pointer.x+(arm.x-pointer.x)/2.5,pointer.y+(arm.y-pointer.y)/2.5-10),ctx.lineTo(pointer.x+(arm.x-pointer.x)/2,pointer.y+(arm.y-pointer.y)/2-10),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.5,pointer.y+(arm.y-pointer.y)/1.5-50),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.2,pointer.y+(arm.y-pointer.y)/1.2-80),ctx.lineTo(pointer.x+(arm.x-pointer.x)/1.1,pointer.y+(arm.y-pointer.y)/1.1-100),ctx.stroke(),ctx.beginPath(),ctx.moveTo(arm2.x+pointer.x-pointer.x/3,pointer.y+(arm2.y-pointer.y)/3+10),ctx.lineTo(arm2.x+pointer.x-pointer.x/2.5,pointer.y+(arm2.y-pointer.y)/2.5+10),ctx.lineTo(arm2.x+pointer.x-pointer.x/2,pointer.y+(arm2.y-pointer.y)/2+10),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.5,pointer.y+(arm2.y-pointer.y)/1.5+50),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.2,pointer.y+(arm2.y-pointer.y)/1.2+80),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.1,pointer.y+(arm2.y-pointer.y)/1.1+100),ctx.stroke(),ctx.beginPath(),ctx.moveTo(arm2.x+pointer.x-pointer.x/3-10,pointer.y+(arm2.y-pointer.y)/3),ctx.lineTo(arm2.x+pointer.x-pointer.x/2.5-10,pointer.y+(arm2.y-pointer.y)/2.5),ctx.lineTo(arm2.x+pointer.x-pointer.x/2-10,pointer.y+(arm2.y-pointer.y)/2),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.5-50,pointer.y+(arm2.y-pointer.y)/1.5),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.2-80,pointer.y+(arm2.y-pointer.y)/1.2),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.1-100,pointer.y+(arm2.y-pointer.y)/1.1),ctx.stroke(),ctx.beginPath(),ctx.moveTo(arm2.x+pointer.x-pointer.x/3,pointer.y+(arm2.y-pointer.y)/3-10),ctx.lineTo(arm2.x+pointer.x-pointer.x/2.5,pointer.y+(arm2.y-pointer.y)/2.5-10),ctx.lineTo(arm2.x+pointer.x-pointer.x/2,pointer.y+(arm2.y-pointer.y)/2-10),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.5,pointer.y+(arm2.y-pointer.y)/1.5-50),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.2,pointer.y+(arm2.y-pointer.y)/1.2-80),ctx.lineTo(arm2.x+pointer.x-pointer.x/1.1,pointer.y+(arm2.y-pointer.y)/1.1-100),ctx.stroke(),ctx.beginPath(),ctx.arc(pointer.x+(arm.x-pointer.x)/3,pointer.y+(arm.y-pointer.y)/3,10,0,2*Math.PI),ctx.arc(pointer.x+(arm.x-pointer.x)/2.5,pointer.y+(arm.y-pointer.y)/2.5,10,0,2*Math.PI),ctx.arc(pointer.x+(arm.x-pointer.x)/2,pointer.y+(arm.y-pointer.y)/2,10,0,2*Math.PI),ctx.arc(pointer.x+(arm.x-pointer.x)/1.5,pointer.y+(arm.y-pointer.y)/1.5,50,0,2*Math.PI),ctx.arc(pointer.x+(arm.x-pointer.x)/1.2,pointer.y+(arm.y-pointer.y)/1.2,80,0,2*Math.PI),ctx.arc(pointer.x+(arm.x-pointer.x)/1.1,pointer.y+(arm.y-pointer.y)/1.1,100,0,2*Math.PI),ctx.stroke(),ctx.beginPath(),ctx.arc(arm2.x+pointer.x-pointer.x/3,pointer.y+(arm2.y-pointer.y)/3,10,0,2*Math.PI),ctx.arc(arm2.x+pointer.x-pointer.x/2.5,pointer.y+(arm2.y-pointer.y)/2.5,10,0,2*Math.PI),ctx.arc(arm2.x+pointer.x-pointer.x/2,pointer.y+(arm2.y-pointer.y)/2,10,0,2*Math.PI),ctx.arc(arm2.x+pointer.x-pointer.x/1.5,pointer.y+(arm2.y-pointer.y)/1.5,50,0,2*Math.PI),ctx.arc(arm2.x+pointer.x-pointer.x/1.2,pointer.y+(arm2.y-pointer.y)/1.2,80,0,2*Math.PI),ctx.arc(arm2.x+pointer.x-pointer.x/1.1,pointer.y+(arm2.y-pointer.y)/1.1,100,0,2*Math.PI),ctx.stroke(),ctx.fillStyle="#004444",ctx.font="14px arial",ctx.textAlign="center",ctx.textBaseline="middle",ctx.fillText("Coronavirus Shooting Game, Designed & Developed by Faisal Jawed",stage.w/2,stage.h-20)}function toggleFullScreen(){var doc=window.document,docEl=doc.documentElement,requestFullScreen=docEl.requestFullscreen||docEl.mozRequestFullScreen||docEl.webkitRequestFullScreen||docEl.msRequestFullscreen,cancelFullScreen=doc.exitFullscreen||doc.mozCancelFullScreen||doc.webkitExitFullscreen||doc.msExitFullscreen;doc.fullscreenElement||doc.mozFullScreenElement||doc.webkitFullscreenElement||doc.msFullscreenElement?cancelFullScreen.call(doc):requestFullScreen.call(docEl)}var ox=0,oy=0;function mousestart(e){mxpos=(e.pageX-loffset)*scale,mypos=(e.pageY-toffset)*scale,pointer.x=mxpos,pointer.y=mypos}function mousemove(e){mxpos=(e.pageX-loffset)*scale,mypos=(e.pageY-toffset)*scale,pointer.x=mxpos,pointer.y=mypos,ox=mxpos}function mouseend(e){}var moveX=0,moveY=0,moveZ=0;function keydowned(e){}function keyuped(e){}function _pexresize(){var cw=window.innerWidth,ch=window.innerHeight;cw<=ch*stage.w/stage.h?(portrait=!0,scale=stage.w/cw,loffset=0,toffset=Math.floor(ch-cw*stage.h/stage.w)/2,_pexcanvas.style.width=cw+"px",_pexcanvas.style.height=Math.floor(cw*stage.h/stage.w)+"px"):(scale=stage.h/ch,portrait=!1,loffset=Math.floor(cw-ch*stage.w/stage.h)/2,toffset=0,_pexcanvas.style.height=ch+"px",_pexcanvas.style.width=Math.floor(ch*stage.w/stage.h)+"px"),_pexcanvas.style.marginLeft=loffset+"px",_pexcanvas.style.marginTop=toffset+"px"}window.addEventListener("mousedown",(function(e){mousestart(e)}),!1),window.addEventListener("mousemove",(function(e){mousemove(e)}),!1),window.addEventListener("mouseup",(function(e){mouseend(e)}),!1),window.addEventListener("touchstart",(function(e){e.preventDefault(),mousestart(e.touches[0])}),!1),window.addEventListener("touchmove",(function(e){e.preventDefault(),mousemove(e.touches[0])}),!1),window.addEventListener("touchend",(function(e){e.preventDefault(),mouseend(e.touches[0])}),!1),window.addEventListener("keydown",(function(e){keydowned(e)}),!1),window.addEventListener("keyup",(function(e){keyuped(e)}),!1),window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)};var fps=60,nfcount=0;function animated(){requestAnimFrame(animated),enginestep(),nfcount++,ctx.fillStyle="#00ffff",ctx.font="12px arial",ctx.textAlign="left",ctx.fillText("FPS: "+Math.floor(fps),10,stage.h-20)}function countfps(){fps=nfcount,nfcount=0}_pexresize(),animated(),setInterval(countfps,1e3);